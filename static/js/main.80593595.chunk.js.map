{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","handleAddGood","good","setState","handleClearGood","this","className","length","type","onClick","map","isGoodSelected","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PASaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,cAAgB,SAACC,GAAD,OACd,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,gBAAkB,kBAAM,EAAKD,SAAS,CAAEH,aAAc,MATxD,4CAWE,WACE,IAAQA,EAAiBK,KAAKN,MAAtBC,aACAC,EAAmCI,KAAnCJ,cAAeG,EAAoBC,KAApBD,gBAEvB,OACE,uBAAME,UAAU,oBAAhB,UACGN,EAAaO,OAEV,qBAAID,UAAU,sCAAd,oBACMN,EADN,gBAGE,wBACE,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAASL,OAIZ,oBAAIE,UAAU,QAAd,+BAEL,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAACR,GACV,IAAMS,EAAiBX,IAAiBE,EAExC,OACE,qBAEE,UAAQ,OACRI,UAAWM,IAAW,CACpB,+BAAgCD,IAJpC,UAOE,6BACGA,EAEG,wBACE,UAAQ,eACRH,KAAK,SACLF,UAAU,iBACVG,QAASL,EAJX,eAUA,wBACE,UAAQ,YACRI,KAAK,SACLF,UAAU,SACVG,QAAU,kBACRR,EAAcC,IALlB,iBAcN,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MAlCEA,iBAvCvB,GAAyBW,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80593595.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\ntype State = {\n  selectedGood: string\n};\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  handleAddGood = (good: string) => (\n    this.setState({ selectedGood: good })\n  );\n\n  handleClearGood = () => this.setState({ selectedGood: '' });\n\n  render() {\n    const { selectedGood } = this.state;\n    const { handleAddGood, handleClearGood } = this;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood.length\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={handleClearGood}\n              />\n            </h1>\n          )\n          : (<h1 className=\"title\">No goods selected</h1>) }\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isGoodSelected = selectedGood === good;\n\n              return (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                  className={classNames({\n                    'has-background-success-light': isGoodSelected,\n                  })}\n                >\n                  <td>\n                    {isGoodSelected\n                      ? (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={handleClearGood}\n                        >\n                          -\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={(() => (\n                            handleAddGood(good)\n                          ))}\n                        >\n                          +\n                        </button>\n                      )}\n\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}